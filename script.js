var Node = neataptic.Node;
var Neat = neataptic.Neat;
var Network = neataptic.Network;
var Methods = neataptic.Methods;
var Architect = neataptic.Architect;
var Trainer = neataptic.Trainer;


var network = new Architect.Perceptron(17,11,4);
$( document ).ready(function() {
  drawGraph(network.graph(500, 250), '.draw');
  var trainingSet = [{ input: [1,1,1,0.3,1,0,0.5,0.6,0,0,0,0,0,0,0,0.5,0],output: [0,0,1,0] },
  { input: [1,1,0,0.7,0,0,0.25,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,0,0.5,0,0,0,0,1,0,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.7,0,0.5,0,0.6,0,0,0,0,0,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,1,1,0.9,1,0,0,1,1,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.3,0,0.5,1,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [1,0,1,0.7,1,0.5,0,0.9,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [1,0,0,0.7,0,0.25,1,0,0,0,0,0,0,0,0,0.5,0],output: [0,0,1,0] },
  { input: [0,0,0,0.7,0,0.25,0,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [1,0,0,0.7,0,0.5,0,0,1,0,0,0,1,1,0,1,0],output: [0,0,1,0] },
  { input: [0,0,0,0.3,0,0,0,0.6,1,1,0,0,1,1,0,0,1],output: [0,1,0,0] },
  { input: [1,1,0,0.7,1,0,0.5,0.3,0,1,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [1,0,1,0.7,0,0,0,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [0,0,0,0.7,0,0,0,0,0,0,1,0,0,1,1,0,0],output: [0,1,0,0] },
  { input: [1,1,0,0.7,0,0.25,0,0.9,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [0,0,0,0.3,0,0.5,0.5,0.6,1,0,0,0,0,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.3,0,0.5,0,0,0,0,1,1,0,0,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.7,0,0,0,0,1,0,0,0,1,1,0,0.5,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,0,0.5,0.6,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [1,0,0,0.7,0,0.5,0,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [0,0,0,0.3,0,0,0,0,1,0,0,0,1,1,0,0.5,0],output: [0,1,0,0] },
  { input: [1,1,0,0.3,1,0.25,0,0,0,1,0,0,0,0,0,0.5,0],output: [0,0,1,0] },
  { input: [0,0,0,0.3,0,0,0.5,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [1,1,0,0.3,0,0,0.5,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [1,0,0,0.7,0,0,0.5,0.6,0,0,0,0,0,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.3,0,0.5,0.5,0,1,1,1,1,1,1,0,0,0],output: [1,0,0,0] },
  { input: [1,1,0,0.3,1,0.75,1,0.9,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,1,0.25,0.6,1,1,0,0,1,1,1,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,0.25,0.5,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,1,0,0,1,0,0,0,1,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.3,0,0.5,0.5,0,1,0,0,1,0,1,0,0,0],output: [1,0,0,0] },
  { input: [1,1,1,0.3,0,0.5,1,0.6,1,0,0,0,0,1,0,1,1],output: [0,0,1,0] },
  { input: [1,1,1,0.7,0,0,0.75,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [1,0,0,0.7,1,0.5,0.75,0,0,1,0,0,0,0,0,1,0],output: [0,0,1,0] },
  { input: [0,0,0,0.3,0,0.25,0.75,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,0.25,0.5,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.3,0,0.5,0.75,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
  { input: [0,0,0,0.7,0,0.75,0.75,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] },
  { input: [1,0,0,0.7,0,0.25,0.75,0,1,0,0,0,1,1,0,0,0],output: [1,0,0,0] },
  { input: [0,0,0,0.7,0,0.5,0.75,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] }];

  network.train(trainingSet, {
    iterations: 10000000,
    error: 0.0001,
    rate: 0.2
  });


  var testingSet = [
    { input: [0,0,0,0.7,0,0,0.5,0,1,0,0,0,0,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0,0.5,0,0,0,0,1,0,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.7,0,0.5,0,0.6,0,0,0,0,0,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.3,0,1,1,0.9,1,0,0,1,1,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0.5,1,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [1,0,1,0.7,1,0.5,0,0.9,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.3,0,1,0,0,1,0,0,0,1,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0,0,0.3,1,1,0,0,1,1,0,0.5,0],output: [0,1,0,0] },
    { input: [1,0,0,0.7,0,0.25,1,0,0,0,0,0,0,0,0,0.5,0],output: [0,0,1,0] },
    { input: [0,0,0,0.7,0,0.25,0,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [1,0,0,0.7,0,0.5,0,0,1,0,0,0,1,1,0,1,0],output: [0,0,1,0] },
    { input: [1,1,0,0.7,1,0,0.5,0.3,0,1,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [1,0,1,0.7,0,0,0,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.7,0,0,0,0,0,0,1,0,0,1,1,0,0],output: [0,1,0,0] },
    { input: [1,1,0,0.7,0,0.25,0,0.9,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.3,0,0.5,0.5,0.6,1,0,0,0,0,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0,0,0.6,1,0,1,1,1,1,0,0,0],output: [1,0,0,0] },
    { input: [1,1,0,0.7,1,0,0,0.9,0,1,0,0,0,1,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.7,0,0,0.5,0,1,0,1,1,1,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0.5,0,0,0,0,1,1,0,0,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0,0.5,0.6,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [1,0,0,0.7,0,0.5,0,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.3,0,0,0,0,1,0,0,0,1,1,0,0.5,0],output: [0,1,0,0] },
    { input: [1,1,0,0.3,1,0.25,0,0,0,1,0,0,0,0,0,0.5,0],output: [0,0,1,0] },
    { input: [0,0,0,0.3,0,0,0.5,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [1,0,0,0.7,0,0,0.5,0.6,0,0,0,0,0,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.3,0,0.5,0.5,0,1,1,1,1,1,1,0,0,0],output: [1,0,0,0] },
    { input: [1,1,0,0.3,1,0.75,1,0.9,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.3,0,1,0.25,0.6,1,1,0,0,1,1,1,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.3,0,0.25,0.5,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.7,0,0,0,0,0,0,0,0,0,0,0,0,0],output: [0,0,0,1] },
    { input: [1,1,1,0.3,0,0.5,1,0.6,1,0,0,0,0,1,0,1,1],output: [0,0,1,0] },
    { input: [0,0,0,0.7,0,0.25,0.75,0,1,0,0,1,1,1,0,0,0],output: [1,0,0,0] },
    { input: [1,0,0,0.7,0,0,0.5,0.6,0,0,0,0,0,1,0,1,0],output: [0,0,1,0] },
    { input: [1,1,0,0.7,0,0,0.25,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] },
    { input: [1,1,1,0.7,0,0,0.75,0,0,0,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [1,0,0,0.7,1,0.5,0.75,0,0,1,0,0,0,0,0,1,0],output: [0,0,1,0] },
    { input: [0,0,0,0.3,0,0.25,0.75,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.3,0,0.25,0.5,0,1,1,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.3,0,0.5,0.75,0,1,0,0,0,1,1,0,0,0],output: [0,1,0,0] },
    { input: [0,0,0,0.7,0,0.75,0.75,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] },
    { input: [1,0,0,0.7,0,0.25,0.75,0,1,0,0,0,1,1,0,0,0],output: [1,0,0,0] },
    { input: [0,0,0,0.7,0,0.5,0.75,0,0,1,0,0,0,1,0,0,0],output: [0,1,0,0] }
  ];
  //var out = network.activate([1,1,0,0.7,0,0,0.25,0,0,1,0,0,0,1,0,0,0])
  for( var i = 0 ; i < testingSet.length ; i++){
    var out = network.activate(testingSet[i].input)
    var temErro = false
    for( var j = 0 ; j < 4 ; j ++){
      var calc = 0
      if(out[j] >= 0.8){
        calc = 1
      }
      if(calc !== testingSet[i].output[j]){
        temErro = true
      }
    }
    if(temErro){
      console.log("Erro em "+(i+1)+ " expected: "+testingSet[i].output+" - got  "+out)
    }
  }
  console.log(test.error)
});

$('#test').click(function( event  ) {
  event.preventDefault();
  // var i1 = $('#input1').val()
  // var i2 = $('#input2').val()
  // var out = network.activate([i1,i2])
  // $('#output').val(out)
});
//drawGraph(network.graph(400, 400), '.draw', false);
